SQL stands for Structured Query LanguageMySQL, SQL Server, Access, Oracle, Sybase, DB2, and other database systems.To build a web site that shows data from a database, you will need:An RDBMS database program (i.e. MS Access, SQL Server, MySQL)To use a server-side scripting language, like PHP or ASPTo use SQL to get the data you wantTo use HTML / CSSSELECT STATEMENT IN ASP.NET:txtUserId = getRequestString("UserId");sql = "SELECT * FROM Customers WHERE CustomerId = @0";command = new SqlCommand(sql);command.Parameters.AddWithValue("@0",txtUserID);command.ExecuteReader();INSERT INTO STATEMENT IN ASP.NET:txtNam = getRequestString("CustomerName");txtAdd = getRequestString("Address");txtCit = getRequestString("City");txtSQL = "INSERT INTO Customers (CustomerName,Address,City) Values(@0,@1,@2)";command = new SqlCommand(txtSQL);command.Parameters.AddWithValue("@0",txtNam);command.Parameters.AddWithValue("@1",txtAdd);command.Parameters.AddWithValue("@2",txtCit);command.ExecuteNonQuery();INSERT INTO STATEMENT IN PHP:$stmt = $dbh->prepare("INSERT INTO Customers (CustomerName,Address,City) VALUES (:nam, :add, :cit)");$stmt->bindParam(':nam', $txtNam);$stmt->bindParam(':add', $txtAdd);$stmt->bindParam(':cit', $txtCit);$stmt->execute();SQL injection is a technique where malicious users can inject SQL commands into an SQL statement, via web page input.Injected SQL commands can alter SQL statement and compromise the security of a web application.SQL joins are used to combine rows from two or more tables based on a common field between them.An SQL INNER JOIN returns all rows from multiple tables where the join condition is met.INNER JOIN: Returns all rows when there is at least one match in BOTH tablesLEFT JOIN: Return all rows from the left table, and the matched rows from the right tableRIGHT JOIN: Return all rows from the right table, and the matched rows from the left tableFULL JOIN: Return all rows when there is a match in ONE of the tablesSELF JOIN: is a regular join, but the table is joined with itself.
The SQL UNION operator combines the result of two or more SELECT statements.The SELECT INTO statement copies data from one table and inserts it into a new table.SQL constraints are used to specify rules for the data in a table. In SQL, we have the following constraints:NOT NULL - Indicates that a column cannot store NULL valueUNIQUE - Ensures that each row for a column must have a unique valuePRIMARY KEY - A combination of a NOT NULL and UNIQUE. Ensures that a column (or combination of two or more columns) have a unique identity which helps to find a particular record in a table more easily and quicklyFOREIGN KEY - Ensure the referential integrity of the data in one table to match values in another tableCHECK - Ensures that the value in a column meets a specific conditionDEFAULT - Specifies a default value for a columnThe PRIMARY KEY constraint uniquely identifies each record in a database table.Primary keys must contain UNIQUE values.A primary key column cannot contain NULL values.Most tables should have a primary key, and each table can have only ONE primary key.A FOREIGN KEY in one table points to a PRIMARY KEY in another table.Auto-increment allows a unique number to be generated when a new record is inserted into a table.In SQL, a view is a virtual table based on the result-set of an SQL statement.A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database.NULL values represent missing unknown data.By default, a table column can hold NULL values.


Difference of Function and Procedures
- Function must return a value but in Stored Procedure it is optional( Procedure can return zero or n values).
- Functions can have only input parameters for it whereas Procedures can have input/output parameters .
- Functions can be called from Procedure whereas Procedures cannot be called from Function.

The SQL GROUP BY Statement
The GROUP BY statement is often used with aggregate functions (COUNT, MAX, MIN, SUM, AVG)
to group the result-set by one or more columns.

The SQL HAVING Clause
The HAVING clause was added to SQL because the WHERE keyword could not be used with aggregate functions.

The ORDER BY keyword is used to sort the result-set in ascending or descending order.

The ORDER BY keyword sorts the records in ascending order by default. To sort the records in descending order, use the DESC keyword.

The SQL WHERE Clause
The WHERE clause is used to filter records.
The WHERE clause is used to extract only those records that fulfill a specified condition.



SQL constraints are used to specify rules for data in a table.
